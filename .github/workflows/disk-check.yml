name: Check AOSP repo size

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/LineageOS/android'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'lineage-16.0'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-18.04
    # You can use either of the ubuntu-18.04 or ubuntu-20.04 runner
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "::endgroup::"
 
    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v3
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps


    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        # sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev \
        # libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev \
        # libsdl1.2-dev libwxgtk3.0-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static \
        # libstdc++-10-dev python wget lftp wimtools
        sudo apt -y install gperf \
        libxml2 lzop pngcrush schedtool lzma ncftp \
        python wget lftp wimtools
        wget https://mega.nz/linux/repo/xUbuntu_18.04/amd64/megacmd-xUbuntu_18.04_amd64.deb
        sudo apt -y install ./megacmd-xUbuntu_18.04_amd64.deb
        # mkdir workspace


    - name: All available space
      run: |
        echo "Du -sh ."
        du -sh .
        echo "Df -h"
        df -h

    - name: Setup SSH Keys
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Set variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var
      
    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      
    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "user"
        git config --global user.email "user@mail.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd
          
    - name: Repo Sync
      run: |
        repo sync -c --no-clone-bundle --no-tags --optimized-fetch --prune --force-sync -j$(nproc --all)
      working-directory: workspace

    - name: Disk usage
      run: |
        echo "Df -h"
        df -h
        echo "du all"
        du -ahd1
        echo "Du -sh ."
        du -sh .
      working-directory: workspace


    - name: Compress files
      run: |
        mv workspace/prebuilts ./
        echo "Compressing prebuilds wim"1>
        wimcapture prebuilts prebuilts.wim --threads=`nproc --all` 1>/dev/null
        rm -rf prebuilts
        echo "Compressing workspace.wim"
        wimcapture workspace workspace.wim --threads=`nproc --all` 1>/dev/null
        rm -rf workspace
        filesize=$(du -k "workspace.wim" | cut -f 1)
        echo Wim file size is $filesize
        if [ $filesize -ge 55000000 ]; then
          exit 126
        fi
        ls -lh workspace.wim
        ls -lh prebuilds.wim

    - name: SSH to Actions126
      uses: P3TERX/ssh2actions@v1.0.0

    - name: Upload to mega
      run: |
        mega-cmd-server &>/dev/null &
        sleep 5
        mega-login ${{ secrets.MEGA_USER }} ${{ secrets.MEGA_PASSWORD }}
        mega-ftp /
        lftp ftp://127.0.0.1:4990 -e "put prebuilts.wim"
        lftp ftp://127.0.0.1:4990 -e "put workspace.wim"
        mega-logout
        killall -s TERM mega-cmd-server
